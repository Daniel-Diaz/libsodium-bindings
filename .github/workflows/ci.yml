name: CI

# Trigger the workflow on push or pull request, but only for the main branch
on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  check:
    name: Linting and formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2.3.5
      - name: Set up Haskell
        id: setup-haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: 8.10
          cabal-version: latest
      - name: Set up HLint
        uses: haskell/actions/hlint-setup@v1
        with:
          version: 3.3.6
      - name: Get Ormolu
        run: curl -JLO 'https://github.com/tweag/ormolu/releases/download/0.4.0.0/ormolu-Linux.zip' && unzip 'ormolu-Linux.zip'
      - name: Get cabal-fmt
        uses: actions/checkout@v2.3.5
        with:
          repository: phadej/cabal-fmt
          path: ./cabal-fmt
          ref: dc1e63bb10ddafd6152fae8f7206c3b201b0f7ab
      - name: Configure cabal-fmt
        working-directory: cabal-fmt
        run: cabal new-configure -w ghc --disable-optimization
      - name: Freeze
        run: |
          cd cabal-fmt
          cabal new-freeze
      - name: Cache
        uses: actions/cache@v2.1.3
        env:
          V: 0
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            ./cabal-fmt/dist-newstyle
          key: ${{ env.V }}-${{ hashFiles('./cabal-fmt/cabal.project.freeze') }}
          restore-keys: ${{ env.V }}-
      - name: Install cabal-fmt
        working-directory: cabal-fmt
        run: cabal new-install --install-method=copy --installdir=${{ runner.temp }} --overwrite-policy=always cabal-fmt
      - name: Run HLint
        uses: haskell/actions/hlint-run@v1
        with: 
          path: src/
          fail-on: 'suggestion'
      - name: Run other checks
        run: ./.github/check.sh ./ormolu ${{ runner.temp }}/cabal-fmt
  native:
    name: "Native: GHC ${{ matrix.ghc }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ghc: ['8.10', '9.0', '9.2']
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2.3.5
      - name: Set up Haskell
        id: setup-haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 'latest'
      - name: Configure
        run: cabal new-configure
      - name: Freeze
        run: cabal freeze
      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-
      - name: Build
        run: cabal build
